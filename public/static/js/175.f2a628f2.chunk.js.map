{"version":3,"file":"static/js/175.f2a628f2.chunk.js","mappings":"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","sources":["component/Master/tablegroup/List.js","component/formElements/DataTable.js"],"sourcesContent":["import React, { useEffect, useMemo } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllGroups, groups } from \"../../../redux/slices/GroupSlice\";\r\nimport DataTable from \"../../formElements/DataTable\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { FaEdit } from \"react-icons/fa\";\r\n\r\nimport { FaLongArrowAltLeft } from \"react-icons/fa\";\r\n\r\nconst List = () => {\r\n  const TableGroup = useSelector(groups);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    if (TableGroup.length === 0) {\r\n      dispatch(getAllGroups());\r\n    }\r\n  }, []);\r\n\r\n  const data = TableGroup.map((tg) => {\r\n    return {\r\n      id: tg.id,\r\n      Groupname: tg.Groupname,\r\n      inactive: tg.inactive === 1 ? \"Yes\" : \"No\",\r\n    };\r\n  });\r\n  const columns = useMemo(\r\n    () => [\r\n      {\r\n        Header: \"Table Group\",\r\n        accessor: \"Groupname\",\r\n      },\r\n      {\r\n        Header: \"Inactive\",\r\n        accessor: \"inactive\",\r\n      },\r\n      {\r\n        Header: \"Edit\",\r\n        accessor: \"id\", // Assuming 'id' is the unique identifier for your rows\r\n        Cell: ({ row }) => (\r\n          <button\r\n            onClick={() => {\r\n              navigate(\"../\", { state: { data: row.original.id } });\r\n            }}\r\n          >\r\n            <FaEdit className=\"hover:text-orange-500\" />\r\n          </button>\r\n        ),\r\n      },\r\n    ],\r\n    []\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div className=\"px-7 py-1 overflow-auto flex flex-col   h-[calc(100vh-70px)]\">\r\n        <div className=\"inline-flex items-center\">\r\n          <span\r\n            className=\" inline-block p-2  text-slate-500 cursor-pointer hover:bg-slate-700 hover:text-slate-300 hover:rounded-lg \"\r\n            onClick={() => navigate(\"../\")}\r\n          >\r\n            <FaLongArrowAltLeft></FaLongArrowAltLeft>\r\n          </span>\r\n          <span className=\" text-slate-300 text-sm\">Back</span>\r\n        </div>\r\n        {TableGroup.length > 0 ? (\r\n          <DataTable columns={columns} data={data} />\r\n        ) : (\r\n          <p>No Table Groups Found</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React from \"react\";\r\nimport {\r\n  useTable,\r\n  usePagination,\r\n  useSortBy,\r\n  useGlobalFilter,\r\n} from \"react-table\";\r\nimport \"./DataTable.css\";\r\nimport { BiSolidUpArrow, BiSolidDownArrow } from \"react-icons/bi\";\r\n\r\nfunction DataTable({ columns, data }) {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    state: { pageIndex, globalFilter },\r\n\r\n    setGlobalFilter,\r\n\r\n    canPreviousPage,\r\n    canNextPage,\r\n    nextPage,\r\n    previousPage,\r\n    pageOptions,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useGlobalFilter,\r\n    useSortBy,\r\n    usePagination\r\n  );\r\n\r\n  return (\r\n    <div className=\"table-wrapper\">\r\n      <input\r\n        className=\" float-end outline outline-1 text-gray-400 ps-2 outline-orange-500 focus:text-orange-500 \"\r\n        value={globalFilter || \"\"}\r\n        onChange={(e) => setGlobalFilter(e.target.value)}\r\n        placeholder=\"Search...\"\r\n      />\r\n      <table {...getTableProps()} className=\"custom-table\">\r\n        <thead>\r\n          {headerGroups.map((headerGroup, index) => (\r\n            <tr key={index} {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column, columnIndex) => {\r\n                const { key, ...columnProps } = column.getHeaderProps(\r\n                  column.getSortByToggleProps()\r\n                );\r\n                return (\r\n                  <th\r\n                    key={columnIndex}\r\n                    {...columnProps}\r\n                    className=\"custom-header\"\r\n                  >\r\n                    {column.render(\"Header\")}\r\n                    <span>\r\n                      {column.isSorted ? (\r\n                        column.isSortedDesc ? (\r\n                          <BiSolidDownArrow className=\" inline-block text-white ps-2 text-2xl\" />\r\n                        ) : (\r\n                          <BiSolidUpArrow className=\" inline-block text-white ps-2 text-2xl\" />\r\n                        )\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </span>\r\n                  </th>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row, index) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr key={index} {...row.getRowProps()} className=\"custom-row\">\r\n                {row.cells.map((cell) => {\r\n                  const { key, ...cellProps } = cell.getCellProps();\r\n                  return (\r\n                    <td key={key} {...cellProps} className=\"custom-cell\">\r\n                      {cell.render(\"Cell\")}\r\n                    </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"flex justify-between items-center mt-3\">\r\n        <div className=\"flex gap-3\">\r\n          <button\r\n            onClick={() => previousPage()}\r\n            disabled={!canPreviousPage}\r\n            className=\" bg-orange-500 w-20 h-8 rounded-md text-white font-semibold hover:bg-orange-400 \"\r\n          >\r\n            Previous\r\n          </button>\r\n          <button\r\n            onClick={() => nextPage()}\r\n            disabled={!canNextPage}\r\n            className=\" bg-orange-500 w-20 h-8 rounded-md text-white font-semibold hover:bg-orange-400\"\r\n          >\r\n            Next\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\" text-gray-400 text-md font-mono\">\r\n          Page{\" \"}\r\n          <em className=\"text-orange-500\">\r\n            {pageIndex + 1} of {pageOptions.length}\r\n          </em>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;\r\n"],"names":["List","TableGroup","useSelector","groups","dispatch","useDispatch","navigate","useNavigate","useEffect","length","getAllGroups","data","map","tg","id","Groupname","inactive","columns","useMemo","Header","accessor","Cell","_ref","row","_jsx","onClick","state","original","children","FaEdit","className","_Fragment","_jsxs","FaLongArrowAltLeft","DataTable","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","pageIndex","globalFilter","setGlobalFilter","canPreviousPage","canNextPage","nextPage","previousPage","pageOptions","useTable","initialState","pageSize","useGlobalFilter","useSortBy","usePagination","value","onChange","e","target","placeholder","headerGroup","index","getHeaderGroupProps","headers","column","columnIndex","key","columnProps","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","BiSolidDownArrow","BiSolidUpArrow","getRowProps","cells","cell","cellProps","getCellProps","disabled"],"sourceRoot":""}