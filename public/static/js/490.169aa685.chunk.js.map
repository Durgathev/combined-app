{"version":3,"file":"static/js/490.169aa685.chunk.js","mappings":"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","sources":["component/customLoader/LineSpinner.js","component/Layout/Sidebar.js","context/orderContext.js","component/Layout/OrderModel.js","component/Layout/OrderDetails.js","component/pages/Products.js","context/OrderContextProvider.js","component/pages/Home.js"],"sourcesContent":["import React from \"react\";\r\nimport { LineWave } from \"react-loader-spinner\";\r\n\r\nconst LineSpinner = () => {\r\n  return (\r\n    <div className=\" inset-0 z-50 fixed flex justify-center items-center backdrop-blur\">\r\n      <LineWave\r\n        visible={true}\r\n        height=\"100\"\r\n        width=\"100\"\r\n        color=\"#F97316\"\r\n        ariaLabel=\"line-wave-loading\"\r\n        wrapperStyle={{}}\r\n        wrapperClass=\"\"\r\n        firstLineColor=\"\"\r\n        middleLineColor=\"\"\r\n        lastLineColor=\"\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineSpinner;\r\n","import React, { useEffect } from \"react\";\r\nimport { PiBowlFoodFill } from \"react-icons/pi\";\r\nimport { MdEmojiFoodBeverage } from \"react-icons/md\";\r\nimport { BiSolidDrink } from \"react-icons/bi\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  category,\r\n  getAllCategory,\r\n  selectedCategory,\r\n} from \"../../redux/slices/CategorySlice\";\r\nimport { action } from \"../../redux/slices/CategorySlice\";\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const Category = useSelector(category);\r\n  const selectedCat = useSelector(selectedCategory);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllCategory());\r\n  }, []);\r\n\r\n  const handleSelectedCategory = (id) => {\r\n    dispatch(action.selected({ catid: id }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\" text-slate-500 font-light col-start-1 col-end-2\r\n       border-r border-slate-300 overflow-auto h-[calc(100vh-70px)]\"\r\n      >\r\n        <div className=\"px-2\">\r\n          <ul className=\"text-center  text-md md:text-md\">\r\n            {Category.length === 0 && (\r\n              <p className=\" text-slate-500 text-center font-medium text-md\">\r\n                No Item Group Found...\r\n              </p>\r\n            )}\r\n            {Category.map((cat) => {\r\n              {\r\n                if (cat.inactive === 0) {\r\n                  return (\r\n                    <li\r\n                      key={cat.id}\r\n                      className={\r\n                        selectedCat === cat.id\r\n                          ? \"pb-4 my-2 flex flex-col justify-center items-center rounded-md py-2 bg-orange-500 text-white cursor-pointer\"\r\n                          : \"pb-4 my-2 flex flex-col justify-center items-center rounded-md  py-2 hover:bg-orange-500 hover:text-white cursor-pointer\"\r\n                      }\r\n                      onClick={() => handleSelectedCategory(cat.id)}\r\n                    >\r\n                      {cat.Category.toLowerCase() === \"food\" ? (\r\n                        <PiBowlFoodFill className=\"text-2xl\" />\r\n                      ) : cat.Category.toLowerCase() === \"coffee\" ? (\r\n                        <MdEmojiFoodBeverage className=\"text-2xl\" />\r\n                      ) : (\r\n                        <BiSolidDrink className=\"text-2xl\" />\r\n                      )}\r\n\r\n                      <span></span>\r\n                      {cat.Category}\r\n                    </li>\r\n                  );\r\n                }\r\n              }\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n","import React from \"react\";\r\n\r\nconst orderContext = React.createContext();\r\nexport default orderContext;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { FaWindowClose } from \"react-icons/fa\";\r\nimport { FaPlus } from \"react-icons/fa\";\r\nimport { FaMinus } from \"react-icons/fa\";\r\nimport orderContext from \"../../context/orderContext\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addedActions } from \"../../redux/slices/addedOrderSlice\";\r\n\r\nconst OrderModel = (props) => {\r\n  const OrderContext = useContext(orderContext);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (props.item.length > 0) {\r\n      OrderContext.dispatch({\r\n        type: \"setPrice\",\r\n        price: props.item[0].price,\r\n        name: props.item[0].item,\r\n        id: props.item[0].id,\r\n        urlpath: props.item[0].urlpath,\r\n      });\r\n    }\r\n    return () => {\r\n      OrderContext.dispatch({ type: \"cleanup\" });\r\n    };\r\n  }, [props.item]);\r\n\r\n  const addOrderHandler = () => {\r\n    dispatch(\r\n      addedActions.addedToOrder({ priceDetails: OrderContext.priceDetails })\r\n    );\r\n    props.onClose();\r\n  };\r\n  if (!props.isopen) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"inset-0 z-50  outline-none fixed overflow-x-hidden overflow-y-hidden flex justify-center items-center backdrop-blur-sm\">\r\n      <div className=\" relative w-2/6  mx-auto my-6 shadow-lg text-center bg-white rounded-lg\">\r\n        <div>\r\n          <div className=\" border-b border-slate-300  flex justify-between items-center px-3 py-4\">\r\n            <h4 className=\" text-lg font-bold\">Add Order</h4>\r\n            <FaWindowClose\r\n              onClick={props.onClose}\r\n              className=\" cursor-pointer\"\r\n            />\r\n          </div>\r\n          {props.item.map((itm, index) => {\r\n            return (\r\n              <div\r\n                key={index}\r\n                className=\" grid grid-cols-3 mx-3 my-4 px-2 py-2 rounded-md bg-slate-200\"\r\n              >\r\n                <div className=\"\">\r\n                  <img\r\n                    src={\"http://localhost:5000/\" + itm.urlpath}\r\n                    alt={itm.item}\r\n                    className=\" rounded-md\"\r\n                    style={{ width: \"157px\", height: \"104px\" }}\r\n                  />\r\n                </div>\r\n                <div className=\" flex flex-col justify-around  text-start px-2\">\r\n                  <h4 className=\" text-md font-bold\">{itm.item}</h4>\r\n                  <div>\r\n                    <span className=\" text-slate-400 font-thin\">price</span>\r\n                    <h6 className=\" text-orange-500 font-bold text-lg\">\r\n                      {itm.price}\r\n                    </h6>\r\n                  </div>\r\n                </div>\r\n                <div className=\" flex items-center justify-around\">\r\n                  <div\r\n                    className=\" bg-white p-2 rounded-full cursor-pointer\"\r\n                    onClick={OrderContext.decrementHandler}\r\n                  >\r\n                    <FaMinus />\r\n                  </div>\r\n\r\n                  <span className=\"!select-none\">\r\n                    {OrderContext.priceDetails.quantity}\r\n                  </span>\r\n                  <div\r\n                    className=\" bg-white p-2 rounded-full cursor-pointer\"\r\n                    onClick={OrderContext.incrementHandler}\r\n                  >\r\n                    <FaPlus></FaPlus>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <div className=\" mx-3 my-4 px-2 py-2\">\r\n            <textarea\r\n              className=\" w-full rounded-md px-2 py-2 text-sm  font-mono font-light\r\n              focus:outline-none  border  border-gray-400 focus:border-orange-500 !select-none\"\r\n              rows={5}\r\n              placeholder=\"Add Note\"\r\n              onChange={(e) =>\r\n                OrderContext.dispatch({ type: \"notes\", notes: e.target.value })\r\n              }\r\n            ></textarea>\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-2 mx-3 my-4 px-2 py-2\">\r\n            <div className=\" text-start\">\r\n              <span className=\"!select-none inline-block text-slate-500\">\r\n                Total\r\n              </span>\r\n              <p className=\" font-extrabold text-md font-mono\">\r\n                ${OrderContext.priceDetails.totalamount}\r\n              </p>\r\n            </div>\r\n\r\n            <button\r\n              className=\" bg-orange-300 py-2 rounded-3xl text-white text-md font-semibold hover:bg-orange-500\"\r\n              onClick={addOrderHandler}\r\n            >\r\n              Add Order\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default OrderModel;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { IoIosArrowForward } from \"react-icons/io\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  addedActions,\r\n  addedOrder,\r\n  selectedTableId,\r\n} from \"../../redux/slices/addedOrderSlice\";\r\nimport { State, createOrder, cleanup } from \"../../redux/slices/OrdersSlice\";\r\nimport { toast, Toaster } from \"react-hot-toast\";\r\nimport LineSpinner from \"../customLoader/LineSpinner\";\r\n\r\nconst OrderDetails = () => {\r\n  const Orders = useSelector(addedOrder);\r\n  const [customer, setCustomer] = useState(\"\");\r\n  const { status, code } = useSelector(State);\r\n  const tableid = useSelector(selectedTableId);\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  let Totalamount = 0;\r\n  const navigateHandler = () => {\r\n    navigate(\"../home/Table\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (code === 201) {\r\n      toast.success(status);\r\n    } else if (code === 500 || code === 404) {\r\n      toast.error(status);\r\n    }\r\n\r\n    return () => dispatch(cleanup());\r\n  }, [status, code]);\r\n\r\n  const placeOrderHandler = async () => {\r\n    const proccessedName = customer.trim();\r\n\r\n    if (!tableid) {\r\n      return toast.error(\"choose a table\");\r\n    }\r\n    if (proccessedName === \"\" || proccessedName.length < 5) {\r\n      return toast.error(\"Invalid Customer name\");\r\n    }\r\n\r\n    if (Orders.addedOrder.length === 0) {\r\n      return toast.error(\"Choose Item\");\r\n    }\r\n\r\n    await dispatch(createOrder({ obj: Orders, proccessedName }));\r\n    await dispatch(addedActions.cleanup());\r\n    setCustomer(\"\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {status === \"loading\" && <LineSpinner />}\r\n      <Toaster />\r\n\r\n      <div className=\"col-start-10 col-end-13 px-3 pt-3  text-start flex flex-col gap-2 overflow-auto h-[calc(100vh-70px)]\">\r\n        <div className=\" flex-grow h-[75%]\">\r\n          <p className=\" text-xl font-bold font-mono\">Customer Information</p>\r\n          <div className=\"h-full flex flex-col\">\r\n            <div className=\" flex flex-col  py-2 border-b border-slate-300\">\r\n              <div className=\" grid px-4\">\r\n                <button\r\n                  className=\"rounded-2xl py-2 px-2 bg-orange-300 text-white hover:bg-orange-500 transition ease-in-out delay-75\"\r\n                  onClick={navigateHandler}\r\n                >\r\n                  <div className=\" inline-flex items-center gap-5\">\r\n                    {!tableid ? (\r\n                      <span>Select Table</span>\r\n                    ) : (\r\n                      <span>Table Selected</span>\r\n                    )}\r\n\r\n                    <span>\r\n                      <IoIosArrowForward />\r\n                    </span>\r\n                  </div>\r\n                </button>\r\n              </div>\r\n              <div className=\"my-3 px-4\">\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"w-full focus:outline-none px-10 py-2 md:px-16 border rounded-2xl border-gray-400 focus:border-orange-500\r\n              \"\r\n                  maxLength={30}\r\n                  placeholder=\"Customer Name\"\r\n                  value={customer}\r\n                  onChange={(e) => setCustomer(e.target.value)}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"py-2 h-2/3 overflow-y-auto\">\r\n              <h5 className=\" text-xl font-mono font-bold\">Orders Details</h5>\r\n              {Orders.addedOrder.map((ord, index) => {\r\n                Totalamount += ord.totalamount;\r\n                return (\r\n                  <div\r\n                    key={index}\r\n                    className=\" grid grid-cols-2 px-4 py-2 border-b border-slate-300\"\r\n                  >\r\n                    <div className=\"p-3\">\r\n                      <img\r\n                        src={\"http://localhost:5000/\" + ord.urlpath}\r\n                        alt={ord.item}\r\n                        className=\" rounded-md\"\r\n                      />\r\n                    </div>\r\n                    <div className=\" flex flex-col   text-start p-3\">\r\n                      <h4 className=\" text-md font-bold\">{ord.item}</h4>\r\n                      <p className=\" text-slate-400 font-thin\">\r\n                        Quantity :{\" \"}\r\n                        <span className=\" text-orange-500 font-bold text-md\">\r\n                          {ord.quantity}\r\n                        </span>\r\n                      </p>\r\n                      <p className=\" text-slate-400 font-thin\">\r\n                        price / qty :{\" \"}\r\n                        <span className=\" text-orange-500 font-bold text-md\">\r\n                          {ord.price}\r\n                        </span>\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\" flex-grow h-[25%] \">\r\n          <div className=\"flex flex-col justify-between gap-3\">\r\n            <div className=\" grid grid-cols-1 \">\r\n              <div className=\"flex justify-between  text-slate-400 font-thin\">\r\n                <div>Subtotal</div>\r\n                <div className=\" font-semibold\">{Totalamount}</div>\r\n              </div>\r\n              <div className=\"flex justify-between border-b-2 border-dotted border-slate-300  text-slate-400 font-thin\">\r\n                <div>Tax</div>\r\n                <div className=\" font-semibold\">0.00</div>\r\n              </div>\r\n              <div className=\"flex justify-between\">\r\n                <div className=\" text-slate-400 font-thin\">Total Amount</div>\r\n                <div className=\" text-orange-500 font-semibold\">\r\n                  {Totalamount}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\" grid px-4 \">\r\n              <button\r\n                onClick={placeOrderHandler}\r\n                className=\"rounded-2xl py-2 px-2 bg-orange-300 text-white hover:bg-orange-500 transition ease-in-out delay-75\"\r\n              >\r\n                Place Order\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderDetails;\r\n","import React, { useDeferredValue, useEffect, useMemo, useState } from \"react\";\r\nimport { CiSearch } from \"react-icons/ci\";\r\nimport image from \"../../assets/down.jpeg\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getAllGroups, itemGroup } from \"../../redux/slices/ItemGroupSlice\";\r\nimport { category, selectedCategory } from \"../../redux/slices/CategorySlice\";\r\nimport { GetAllItems, items } from \"../../redux/slices/Items_Slice\";\r\nimport OrderModel from \"../Layout/OrderModel\";\r\nimport OrderDetails from \"../Layout/OrderDetails\";\r\n\r\nconst Products = () => {\r\n  const allitems = useSelector(items);\r\n  const Caty = useSelector(category);\r\n  const dispatch = useDispatch();\r\n  let Groups = useSelector(itemGroup);\r\n  const [totalItems, setTotalitems] = useState([]);\r\n  const [totalGroup, setTotalgroup] = useState([]);\r\n  const [modelOpen, setModelOpen] = useState(false);\r\n  const [selectItem, setSelectItem] = useState([]);\r\n  const [selectCatname, setSelectCatname] = useState(\"\");\r\n  const [searchItems, setSearchItems] = useState(\"\");\r\n  const [choosengrp, setChoosengrp] = useState();\r\n  const DeferredSerach = useDeferredValue(searchItems);\r\n  const selectedCat = useSelector(selectedCategory);\r\n\r\n  useEffect(() => {\r\n    dispatch(getAllGroups());\r\n    dispatch(GetAllItems());\r\n    const filtereditem = allitems.filter((itm) => itm.inactive === 0);\r\n    setTotalitems(filtereditem);\r\n    setTotalgroup(Groups);\r\n  }, []);\r\n\r\n  useMemo(() => {\r\n    if (choosengrp) {\r\n      const filtereditems = allitems.filter(\r\n        (item) => item.gpid === choosengrp && item.inactive === 0\r\n      );\r\n\r\n      setTotalitems(filtereditems);\r\n    }\r\n  }, [choosengrp]);\r\n\r\n  useMemo(() => {\r\n    if (DeferredSerach) {\r\n      const filtereditems = allitems.filter((item) =>\r\n        item.item\r\n          .trim()\r\n          .toLowerCase()\r\n          .includes(DeferredSerach.toLowerCase() && item.inactive === 0)\r\n      );\r\n      setTotalitems(filtereditems);\r\n    }\r\n  }, [DeferredSerach]);\r\n\r\n  useEffect(() => {\r\n    const filteredCatArr = Caty.find((cat) => cat.id === selectedCat);\r\n    if (filteredCatArr) {\r\n      setSelectCatname(filteredCatArr.Category);\r\n    }\r\n    const filteredGroups = Groups.filter(\r\n      (g) => g.CategoryId === selectedCat && g.inactive === 0\r\n    );\r\n    setTotalgroup(filteredGroups);\r\n    const groupCatIds = filteredGroups.map((g) => g.id);\r\n    const filtereditems = allitems.filter((item) =>\r\n      groupCatIds.includes(item.gpid)\r\n    );\r\n    setTotalitems(filtereditems);\r\n  }, [selectedCat]);\r\n\r\n  const modelOpenHandler = (item) => {\r\n    setSelectItem((state) => [item]);\r\n    setModelOpen(true);\r\n  };\r\n\r\n  const modelClose = () => {\r\n    setModelOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <OrderModel\r\n        isopen={modelOpen}\r\n        item={selectItem}\r\n        onClose={modelClose}\r\n      ></OrderModel>\r\n      <div className=\"col-start-2 col-end-10 border-r border-slate-300\">\r\n        <h6 className=\" px-2  py-text-slate-00 text-sm border-b border-slate-300\">\r\n          Home <span className=\" text-orange-500\">/ {selectCatname}</span>\r\n        </h6>\r\n        <div className=\" py-2 border-b  border-slate-300 text-lg grid grid-cols-2 gap-2\">\r\n          <div className=\"px-3 group inline-flex items-center gap-1 border-r-2 border-slate-300\">\r\n            <CiSearch />\r\n            <input\r\n              type=\"text\"\r\n              className=\" outline-none pl-2\"\r\n              placeholder=\"search menu..\"\r\n              onChange={(e) => setSearchItems(e.target.value)}\r\n            />\r\n          </div>\r\n          <div className=\" pr-3\">\r\n            <ul className=\"flex justify-evenly items-center flex-wrap\">\r\n              {totalGroup.length === 0 && (\r\n                <p className=\" text-slate-500 text-center font-medium text-md\">\r\n                  No Item Group Found...\r\n                </p>\r\n              )}\r\n              {totalGroup.map((grp) => {\r\n                if (grp.inactive === 0) {\r\n                  return (\r\n                    <li\r\n                      key={grp.id}\r\n                      className={\r\n                        choosengrp === grp.id\r\n                          ? \"text-base border border-slate-300 rounded-xl px-2 bg-orange-500 ytext-white cursor-pointer text-white\"\r\n                          : \"text-base border border-slate-300 rounded-xl px-2 hover:bg-orange-500 hover:text-white cursor-pointer\"\r\n                      }\r\n                      onClick={() => setChoosengrp(grp.id)}\r\n                    >\r\n                      {grp.Group}\r\n                    </li>\r\n                  );\r\n                }\r\n                return null;\r\n              })}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n        <div className=\" p-3 overflow-auto h-[calc(100vh-140px)] bg-slate-100\">\r\n          <div className=\"mt-1 grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-2\">\r\n            {totalItems.length === 0 && (\r\n              <p className=\" text-slate-500 text-center font-medium text-xl\">\r\n                No Items Found...\r\n              </p>\r\n            )}\r\n            {totalItems.map((item) => {\r\n              return (\r\n                <div\r\n                  key={item.id}\r\n                  className=\" bg-white p-4 rounded-lg shadow-lg cursor-pointer\"\r\n                  onClick={() => modelOpenHandler(item)}\r\n                >\r\n                  <img\r\n                    src={\"http://localhost:5000/\" + item.urlpath || image}\r\n                    alt={item.item}\r\n                    className=\"block rounded-lg\"\r\n                    style={{ width: \"210px\", height: \"140px\" }}\r\n                  />\r\n                  <p className=\"text-center text-md font-bold\">{item.item}</p>\r\n                  <span className=\" block text-center text-md font-bold text-orange-500\">\r\n                    $ {item.price}\r\n                  </span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <OrderDetails />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","import React, { useState, useReducer } from \"react\";\r\nimport orderContext from \"./orderContext\";\r\n\r\nconst initialState = {\r\n  item: \"\",\r\n  id: null,\r\n  urlpath: \"\",\r\n  quantity: 1,\r\n  price: 0,\r\n  totalamount: 0,\r\n  notes: \"\",\r\n};\r\nconst reducerFunction = (state, action) => {\r\n  switch (action.type) {\r\n    case \"increment\":\r\n      return {\r\n        ...state,\r\n        quantity: Number(state.quantity) + 1,\r\n        totalamount: state.price * (state.quantity + 1),\r\n      };\r\n\r\n    case \"decrement\":\r\n      let quan =\r\n        state.quantity - 1 > 0 ? Number(state.quantity) - 1 : state.quantity;\r\n      return {\r\n        ...state,\r\n        quantity: quan,\r\n        totalamount: Number(state.price) * quan,\r\n      };\r\n\r\n    case \"notes\":\r\n      return {\r\n        ...state,\r\n        notes: action.notes,\r\n      };\r\n    case \"setPrice\":\r\n      return {\r\n        ...state,\r\n        price: action.price,\r\n        totalamount: action.price * state.quantity,\r\n        item: action.name,\r\n        id: action.id,\r\n        urlpath: action.urlpath,\r\n      };\r\n    case \"cleanup\":\r\n      return {\r\n        item: \"\",\r\n        id: null,\r\n        urlpath: \"\",\r\n        quantity: 1,\r\n        price: 0,\r\n        totalamount: 0,\r\n        notes: \"\",\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst OrderContextProvider = ({ children }) => {\r\n  const [addedOrder, setAddedOrder] = useState([]);\r\n  const [priceDetails, dispatch] = useReducer(reducerFunction, initialState);\r\n\r\n  const incrementHandler = () => {\r\n    dispatch({ type: \"increment\" });\r\n  };\r\n  const decrementHandler = () => {\r\n    dispatch({ type: \"decrement\" });\r\n  };\r\n\r\n  const addedToOrder = () => {\r\n    setAddedOrder((state) => [...state, priceDetails]);\r\n  };\r\n\r\n  const clear = () => {\r\n    setAddedOrder([]);\r\n  };\r\n  return (\r\n    <orderContext.Provider\r\n      value={{\r\n        clear,\r\n        addedOrder,\r\n        addedToOrder,\r\n        incrementHandler,\r\n        decrementHandler,\r\n        priceDetails,\r\n        dispatch,\r\n      }}\r\n    >\r\n      {children}\r\n    </orderContext.Provider>\r\n  );\r\n};\r\n\r\nexport default OrderContextProvider;\r\n","import React from \"react\";\r\nimport Sidebar from \"../Layout/Sidebar\";\r\nimport Products from \"./Products\";\r\nimport OrderContextProvider from \"../../context/OrderContextProvider\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <div className=\"  grid grid-cols-12 overflow-auto\">\r\n      <>\r\n        <OrderContextProvider>\r\n          <Sidebar />\r\n          <Products />\r\n        </OrderContextProvider>\r\n      </>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"names":["LineSpinner","_jsx","className","children","LineWave","visible","height","width","color","ariaLabel","wrapperStyle","wrapperClass","firstLineColor","middleLineColor","lastLineColor","Sidebar","dispatch","useDispatch","Category","useSelector","category","selectedCat","selectedCategory","useEffect","getAllCategory","_Fragment","_jsxs","length","map","cat","inactive","id","onClick","handleSelectedCategory","action","selected","catid","toLowerCase","PiBowlFoodFill","MdEmojiFoodBeverage","BiSolidDrink","React","props","OrderContext","useContext","orderContext","item","type","price","name","urlpath","isopen","FaWindowClose","onClose","itm","index","src","alt","style","decrementHandler","FaMinus","priceDetails","quantity","incrementHandler","FaPlus","rows","placeholder","onChange","e","notes","target","value","totalamount","addOrderHandler","addedActions","addedToOrder","OrderDetails","Orders","addedOrder","customer","setCustomer","useState","status","code","State","tableid","selectedTableId","navigate","useNavigate","Totalamount","toast","success","error","cleanup","Toaster","navigateHandler","IoIosArrowForward","maxLength","ord","async","proccessedName","trim","createOrder","obj","Products","allitems","items","Caty","Groups","itemGroup","totalItems","setTotalitems","totalGroup","setTotalgroup","modelOpen","setModelOpen","selectItem","setSelectItem","selectCatname","setSelectCatname","searchItems","setSearchItems","choosengrp","setChoosengrp","DeferredSerach","useDeferredValue","getAllGroups","GetAllItems","filtereditem","filter","useMemo","filtereditems","gpid","includes","filteredCatArr","find","filteredGroups","g","CategoryId","groupCatIds","OrderModel","modelClose","CiSearch","grp","Group","state","modelOpenHandler","image","initialState","reducerFunction","Number","quan","_ref","setAddedOrder","useReducer","Provider","clear","Home","OrderContextProvider"],"sourceRoot":""}