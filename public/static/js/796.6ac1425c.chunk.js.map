{"version":3,"file":"static/js/796.6ac1425c.chunk.js","mappings":"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","sources":["component/Master/Item/Item.js","component/customLoader/LineSpinner.js","component/formElements/ButtonElement.js","component/formElements/InputElement.js","component/formElements/ListIcon.js","component/formElements/SelectElement.js","util/Schema.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport InputElement from \"../../formElements/InputElement\";\r\nimport { ErrorMessage, Form, Formik } from \"formik\";\r\nimport ButtonElement from \"../../formElements/ButtonElement\";\r\nimport { itemSchema, itemupdateSchema } from \"../../../util/Schema\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport ListIcon from \"../../formElements/ListIcon\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport SelectElement from \"../../formElements/SelectElement\";\r\nimport { itemGroup, getAllGroups } from \"../../../redux/slices/ItemGroupSlice\";\r\nimport {\r\n  GetAllItems,\r\n  items,\r\n  state,\r\n  cleanup,\r\n  createItems,\r\n  updateItems,\r\n} from \"../../../redux/slices/Items_Slice\";\r\nimport LineSpinner from \"../../customLoader/LineSpinner\";\r\n\r\nconst Item = () => {\r\n  const [initial, setInitial] = useState({\r\n    item: \"\",\r\n    price: \"\",\r\n    inactive: \"\",\r\n    gpid: \"\",\r\n    image: \"\",\r\n    id: \"\",\r\n  });\r\n  const [edit, setEdit] = useState(false);\r\n  const { status, code } = useSelector(state);\r\n  const Items = useSelector(items);\r\n  const itemGroups = useSelector(itemGroup);\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (itemGroups.length === 0) {\r\n      dispatch(getAllGroups());\r\n    }\r\n    if (Items.length === 0) {\r\n      dispatch(GetAllItems());\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    if (code === 201 || code === 200) {\r\n      toast.success(status);\r\n    } else if (code === 500 || code === 404 || code === 403) {\r\n      toast.error(status);\r\n    }\r\n    return () => {\r\n      dispatch(cleanup());\r\n    };\r\n  }, [code, status]);\r\n\r\n  useEffect(() => {\r\n    if (location.state?.itemid !== undefined && Items.length > 0) {\r\n      const identified = Items.filter(\r\n        (item) => item.id === location.state?.itemid\r\n      );\r\n      const initialState = {\r\n        gpid: identified[0].gpid,\r\n        item: identified[0].item,\r\n        price: identified[0].price,\r\n        inactive: identified[0].inactive,\r\n        id: identified[0].id,\r\n        image: \"\",\r\n      };\r\n      setInitial(initialState);\r\n      setEdit(true);\r\n    }\r\n\r\n    return () => {\r\n      location.state = null;\r\n    };\r\n  }, [location.state]);\r\n\r\n  const navigationHandler = () => {\r\n    navigate(\"../Item/List\");\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {status === \"loading\" && <LineSpinner />}\r\n      <Toaster />\r\n      <div className=\"px-20 py-8 overflow-auto flex  justify-center h-[calc(100vh-70px)]\">\r\n        <div className=\"  w-full md:w-1/3 px-4 \">\r\n          <h1 className=\"text-center font-semibold text-3xl py-3\">Items</h1>\r\n          <div className=\"w-80 py-3\">\r\n            <div\r\n              className=\"float-end  text-xl text-gray-700 font-semibold cursor-pointer hover:text-orange-500\"\r\n              onClick={navigationHandler}\r\n            >\r\n              <ListIcon />\r\n            </div>\r\n          </div>\r\n\r\n          <Formik\r\n            initialValues={initial}\r\n            enableReinitialize={true}\r\n            validationSchema={edit ? itemupdateSchema : itemSchema}\r\n            onSubmit={(values, action) => {\r\n              if (!edit) {\r\n                const formdata = new FormData();\r\n                formdata.append(\"image\", values.image);\r\n                formdata.append(\"item\", values.item);\r\n                formdata.append(\"inactive\", values.inactive);\r\n                formdata.append(\"gpid\", values.gpid);\r\n                formdata.append(\"price\", values.price);\r\n\r\n                dispatch(createItems(formdata));\r\n              } else {\r\n                dispatch(updateItems({ ...values }));\r\n                setEdit(false);\r\n              }\r\n\r\n              action.setSubmitting(false);\r\n              action.setFieldValue(\"image\", \"\");\r\n              action.resetForm({\r\n                values: {\r\n                  item: \"\",\r\n                  price: \"\",\r\n                  inactive: \"\",\r\n                  gpid: \"\",\r\n                  image: \"\",\r\n                  id: \"\",\r\n                },\r\n              });\r\n            }}\r\n          >\r\n            {(props) => {\r\n              return (\r\n                <Form>\r\n                  <div className=\" flex flex-col  justify-center items-center  text-center mt-5 gap-3\">\r\n                    <InputElement\r\n                      type=\"text\"\r\n                      placeholder=\"Item Name\"\r\n                      name=\"item\"\r\n                    />\r\n                    <InputElement\r\n                      type=\"text\"\r\n                      placeholder=\"Price\"\r\n                      name=\"price\"\r\n                    />\r\n\r\n                    <SelectElement name=\"gpid\">\r\n                      <option value=\"0\">choose ItemGroup </option>\r\n                      {itemGroups.length > 0 &&\r\n                        itemGroups.map(\r\n                          (item, index) =>\r\n                            item.inactive === 0 && (\r\n                              <option key={index} value={item.id}>\r\n                                {item.Group}\r\n                              </option>\r\n                            )\r\n                        )}\r\n                    </SelectElement>\r\n                    <SelectElement name=\"inactive\">\r\n                      <option value=\"\">Inactive ? </option>\r\n                      <option value=\"0\">No</option>\r\n                      <option value=\"1\">Yes</option>\r\n                    </SelectElement>\r\n\r\n                    {!edit ? (\r\n                      <>\r\n                        <input\r\n                          type=\"file\"\r\n                          name=\"image\"\r\n                          onChange={(event) =>\r\n                            props.setFieldValue(\"image\", event.target.files[0])\r\n                          }\r\n                        />\r\n                        <div className=\" text-red-600 font-mono font-light\">\r\n                          <ErrorMessage name=\"image\"></ErrorMessage>\r\n                        </div>\r\n                      </>\r\n                    ) : null}\r\n\r\n                    <ButtonElement\r\n                      type=\"submit\"\r\n                      caption=\"SAVE\"\r\n                      disabled={props.isSubmitting}\r\n                    />\r\n                  </div>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport { LineWave } from \"react-loader-spinner\";\r\n\r\nconst LineSpinner = () => {\r\n  return (\r\n    <div className=\" inset-0 z-50 fixed flex justify-center items-center backdrop-blur\">\r\n      <LineWave\r\n        visible={true}\r\n        height=\"100\"\r\n        width=\"100\"\r\n        color=\"#F97316\"\r\n        ariaLabel=\"line-wave-loading\"\r\n        wrapperStyle={{}}\r\n        wrapperClass=\"\"\r\n        firstLineColor=\"\"\r\n        middleLineColor=\"\"\r\n        lastLineColor=\"\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LineSpinner;\r\n","import React from \"react\";\r\n\r\nconst ButtonElement = (props) => {\r\n  return (\r\n    <>\r\n      <div className=\"w-80\">\r\n        <button\r\n          disabled={props.disabled}\r\n          type={props.type}\r\n          className=\"rounded-2xl  w-full h-10 bg-orange-500 text-white hover:opacity-85 transition ease-in-out delay-75\"\r\n        >\r\n          {props.caption}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ButtonElement;\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\nconst InputElement = ({ ...props }) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  return (\r\n    <>\r\n      <div className=\" w-80\">\r\n        <input\r\n          {...field}\r\n          className=\" outline-none w-full h-10 px-4 border rounded-2xl border-gray-400 focus:border-orange-500\"\r\n          {...props}\r\n        />\r\n        {meta.error && meta.touched && (\r\n          <p className=\" text-red-600 font-mono font-light\">{meta.error}</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default InputElement;\r\n","import React from \"react\";\r\nimport { FaListUl } from \"react-icons/fa\";\r\nconst ListIcon = () => {\r\n  return (\r\n    <>\r\n      <FaListUl />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListIcon;\r\n","import { useField } from \"formik\";\r\nimport React from \"react\";\r\n\r\nconst SelectElement = ({ ...props }) => {\r\n  const [field, meta] = useField(props);\r\n\r\n  return (\r\n    <>\r\n      <div className=\" w-80\">\r\n        <select\r\n          {...field}\r\n          className=\" outline-none  w-full h-10 px-4 border rounded-2xl border-gray-400 focus:border-orange-500\"\r\n          {...props}\r\n        />\r\n        {meta.error && meta.touched && (\r\n          <p className=\" text-red-600 font-mono font-light\">{meta.error}</p>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SelectElement;\r\n","import * as yup from \"yup\";\r\n\r\nexport const tableGroupSchema = yup.object().shape({\r\n  Groupname: yup\r\n    .string()\r\n    .min(3, \"Too Short!\")\r\n    .max(6, \"Too Long!\")\r\n    .required(\"Table Group Required\"),\r\n  inactive: yup.number().notOneOf([\"\"]).required(\"Choose Inactive or not\"),\r\n});\r\n\r\nexport const tableSchema = yup.object().shape({\r\n  Tablename: yup\r\n    .string()\r\n    .min(3, \"Too Short!\")\r\n    .max(6, \"Too Long!\")\r\n    .required(\"Table Name  Required\"),\r\n  GroupId: yup.string().notOneOf([\"0\"]).required(\"Choose a TableGroup\"),\r\n  capacity: yup.string().notOneOf([\"0\"]).required(\"Choose Table Capacity\"),\r\n  inactive: yup.number().notOneOf([\"\"]).required(\"Choose Inactive or not\"),\r\n});\r\n\r\nexport const categorySchema = yup.object().shape({\r\n  Category: yup\r\n    .string()\r\n    .min(3, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Category Name Required\"),\r\n  inactive: yup.number().notOneOf([\"\"]).required(\"Choose Inactive or not\"),\r\n});\r\n\r\nexport const itemGroupSchema = yup.object().shape({\r\n  Group: yup\r\n    .string()\r\n    .min(3, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Group Name  Required\"),\r\n  CategoryId: yup.string().notOneOf([\"0\"]).required(\"Choose a TableGroup\"),\r\n  inactive: yup.number().notOneOf([\"\"]).required(\"Choose Inactive or not\"),\r\n});\r\n\r\nexport const itemSchema = yup.object().shape({\r\n  item: yup\r\n    .string()\r\n    .min(3, \"Too Short!\")\r\n    .max(20, \"Too Long!\")\r\n    .required(\"Item Name Required\"),\r\n  gpid: yup.string().notOneOf([\"0\"]).required(\"Choose a ItemGroup\"),\r\n  price: yup\r\n    .string()\r\n    .max(12, \"Invalid Price!\")\r\n    .matches(/^[0-9]*\\.?[0-9]*$/, \"Must be numbers\")\r\n    .required(\"Price is required\"),\r\n  inactive: yup.number().notOneOf([\"\"]).required(\"Choose Inactive or not\"),\r\n  image: yup.mixed().required(\"Choose a image\"),\r\n});\r\n\r\nexport const itemupdateSchema = yup.object().shape({\r\n  item: yup\r\n    .string()\r\n    .min(3, \"Too Short!\")\r\n    .max(20, \"Too Long!\")\r\n    .required(\"Item Name Required\"),\r\n  gpid: yup.string().notOneOf([\"0\"]).required(\"Choose a ItemGroup\"),\r\n  price: yup\r\n    .string()\r\n    .max(12, \"Invalid Price!\")\r\n    .matches(/^[0-9]*\\.?[0-9]*$/, \"Must be numbers\")\r\n    .required(\"Price is required\"),\r\n  inactive: yup.number().notOneOf([\"\"]).required(\"Choose Inactive or not\"),\r\n});\r\n\r\nexport const roleSchema = yup.object().shape({\r\n  Role: yup\r\n    .string()\r\n    .min(3, \"Too Short!\")\r\n    .max(15, \"Too Long!\")\r\n    .required(\"Role Required\"),\r\n  inactive: yup.number().notOneOf([\"\"]).required(\"Choose Inactive or not\"),\r\n});\r\n\r\nexport const userSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .min(3, \"Too Short!\")\r\n    .max(20, \"Too Long!\")\r\n    .required(\"Username  Required\"),\r\n  roleid: yup.string().notOneOf([\"0\"]).required(\"Choose Role\"),\r\n  password: yup\r\n    .string()\r\n    .min(6, \"At least 6 letters needed\")\r\n    .max(20, \"Too Long!\")\r\n    .matches(\r\n      /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{6,20})/,\r\n      \"Password must include one digit,one lowercase letter, one special character\"\r\n    )\r\n    .required(\"Password required\"),\r\n  inactive: yup.number().notOneOf([\"\"]).required(\"Choose Inactive or not\"),\r\n});\r\n\r\nexport const loginSchema = yup.object().shape({\r\n  username: yup\r\n    .string()\r\n    .min(3, \"Too Short!\")\r\n    .max(20, \"Too Long!\")\r\n    .required(\"Username Required\"),\r\n  password: yup\r\n    .string()\r\n    .min(6, \"At least 6 letters needed\")\r\n    .max(20, \"Too Long!\")\r\n    .matches(\r\n      /((?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[\\W]).{6,20})/,\r\n      \"Password must include one digit,one lowercase letter, one special character\"\r\n    )\r\n    .required(\"Password required\"),\r\n});\r\n"],"names":["Item","initial","setInitial","useState","item","price","inactive","gpid","image","id","edit","setEdit","status","code","useSelector","state","Items","items","itemGroups","itemGroup","dispatch","useDispatch","navigate","useNavigate","location","useLocation","useEffect","length","getAllGroups","GetAllItems","toast","success","error","cleanup","_location$state","undefined","itemid","identified","filter","_location$state2","initialState","_jsxs","_Fragment","children","_jsx","LineSpinner","Toaster","className","onClick","navigationHandler","ListIcon","Formik","initialValues","enableReinitialize","validationSchema","itemupdateSchema","itemSchema","onSubmit","values","action","updateItems","formdata","FormData","append","createItems","setSubmitting","setFieldValue","resetForm","props","Form","InputElement","type","placeholder","name","SelectElement","value","map","index","Group","onChange","event","target","files","ErrorMessage","ButtonElement","caption","disabled","isSubmitting","LineWave","visible","height","width","color","ariaLabel","wrapperStyle","wrapperClass","firstLineColor","middleLineColor","lastLineColor","_ref","field","meta","useField","touched","FaListUl","tableGroupSchema","yup","shape","Groupname","min","max","required","notOneOf","tableSchema","Tablename","GroupId","capacity","categorySchema","Category","itemGroupSchema","CategoryId","matches","roleSchema","Role","userSchema","username","roleid","password","loginSchema"],"sourceRoot":""}